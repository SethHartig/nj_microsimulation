mutate(
earnings_initial = HINCP
) %>%
select(-HINCP)
hh_income = nj_19h %>%
select(SERIALNO, HINCP)
frs_df7 = frs_df6 %>%
left_join(hh_income, by = "SERIALNO") %>%
mutate(
earnings_initial = HINCP
) %>%
select(-HINCP)
frs_df7 %>%
ggplot(aes(x=earnings_initial)) + geom_histogram()
frs_df7 %>%
mutate(
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
)
frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, as.integer(parent1_earnings_initial/(52*parent1_workhours_initial))),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, as.integer(parent2_earnings_initial/(52*parent2_workhours_initial))),
)
frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, as.integer(parent1_earnings_initial/(52*parent1_workhours_initial))),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, as.integer(parent2_earnings_initial/(52*parent2_workhours_initial))),
) %>%
mutate(
parent2_max_work_override_amt = max(40,parent2_workhours_initial)
)
frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, as.integer(parent1_earnings_initial/(52*parent1_workhours_initial))),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, as.integer(parent2_earnings_initial/(52*parent2_workhours_initial))),
) %>%
mutate(
parent2_max_work_override_amt = max(40,parent2_workhours_initial),
parent1_max_work = max(40,parent1_workhours_intitial)
)
frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, as.integer(parent1_earnings_initial/(52*parent1_workhours_initial))),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, as.integer(parent2_earnings_initial/(52*parent2_workhours_initial))),
) %>%
mutate(
parent2_max_work_override_amt = max(40,parent2_workhours_initial),
parent1_max_work = max(40,parent1_workhours_initial)
)
frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, as.integer(parent1_earnings_initial/(52*parent1_workhours_initial))),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, as.integer(parent2_earnings_initial/(52*parent2_workhours_initial))),
) %>%
mutate(
parent2_max_work_override_amt = max(40,parent2_workhours_initial),
parent1_max_work = max(40,parent1_workhours_initial)
) %>%
select(SERIALNO, parent1_earnings_initial, parent2_earnings_initial, parent1_workhours_initial, parent2_workhours_initial, parent1_max_work, parent2_max_work_override_amt)
frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, as.integer(parent1_earnings_initial/(52*parent1_workhours_initial))),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, as.integer(parent2_earnings_initial/(52*parent2_workhours_initial))),
) %>%
mutate(
parent2_max_work_override_amt = ifelse(parent2_workhours_initial > 40, 40, parent2_workhours_initial),
parent1_max_work = ifelse(parent1_workhours_initial > 40, 40, parent1_workhours_initial)
) %>%
select(SERIALNO, parent1_earnings_initial, parent2_earnings_initial, parent1_workhours_initial, parent2_workhours_initial, parent1_max_work, parent2_max_work_override_amt)
frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, as.integer(parent1_earnings_initial/(52*parent1_workhours_initial))),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, as.integer(parent2_earnings_initial/(52*parent2_workhours_initial))),
) %>%
mutate(
parent2_max_work_override_amt = ifelse(parent2_workhours_initial < 40, 40, parent2_workhours_initial),
parent1_max_work = ifelse(parent1_workhours_initial < 40, 40, parent1_workhours_initial)
) %>%
select(SERIALNO, parent1_earnings_initial, parent2_earnings_initial, parent1_workhours_initial, parent2_workhours_initial, parent1_max_work, parent2_max_work_override_amt)
frs_df8 = frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, as.integer(parent1_earnings_initial/(52*parent1_workhours_initial))),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, as.integer(parent2_earnings_initial/(52*parent2_workhours_initial))),
) %>%
mutate(
parent2_max_work_override_amt = ifelse(parent2_workhours_initial < 40, 40, parent2_workhours_initial),
parent1_max_work = ifelse(parent1_workhours_initial < 40, 40, parent1_workhours_initial)
) %>%
select(SERIALNO, parent1_earnings_initial, parent2_earnings_initial, parent1_workhours_initial, parent2_workhours_initial, parent1_max_work, parent2_max_work_override_amt)
frs_df8 = frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, round(parent1_earnings_initial/(52*parent1_workhours_initial),2)),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, round(parent2_earnings_initial/(52*parent2_workhours_initial),2)),
) %>%
mutate(
parent2_max_work_override_amt = ifelse(parent2_workhours_initial < 40, 40, parent2_workhours_initial),
parent1_max_work = ifelse(parent1_workhours_initial < 40, 40, parent1_workhours_initial)
) %>%
select(SERIALNO, parent1_earnings_initial, parent2_earnings_initial, parent1_workhours_initial, parent2_workhours_initial, parent1_max_work, parent2_max_work_override_amt)
write.csv(frs_df8, "./data/cleaned_data/frs_inputs_4.csv", row.names = F)
sipp_immi = pu %>%
filter(TEHC_ST == 34) %>%
filter(MONTHCODE == 10) %>%
filter(TAGE > 17)
sipp_immi %>%
mutate(
id = paste0(SSUID,"_",PNUM)
) %>%
relocate(id,everything()) %>%
select(-c(SSUID,PNUM,MONTHCODE)) %>%
filter(EBORNUS != 1)
sipp_immi %>%
mutate(
id = paste0(SSUID,"_",PNUM)
) %>%
relocate(id,everything()) %>%
select(-c(SSUID,PNUM,MONTHCODE)) %>%
filter(EBORNUS != 1 & ECITIZEN != 1)
frs_df8 = frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, round(parent1_earnings_initial/(52*parent1_workhours_initial),2)),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, round(parent2_earnings_initial/(52*parent2_workhours_initial),2)),
) %>%
mutate(
parent2_max_work_override_amt = ifelse(parent2_workhours_initial < 40, 40, parent2_workhours_initial),
parent1_max_work = ifelse(parent1_workhours_initial < 40, 40, parent1_workhours_initial)
)
frs_df8 %>% head()
frs_df8 = frs_df7 %>%
mutate(
# earnings and work hours initial
parent1_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.6, earnings_initial),
parent2_earnings_initial = ifelse(family_structure == 2, earnings_initial * 0.4, 0),
parent2_workhours_initial = parent2_max_work_override_amt,
parent1_workhours_initial = parent1_max_work
) %>%
mutate(
wage_1 = ifelse(parent1_workhours_initial == 0, 13, round(parent1_earnings_initial/(52*parent1_workhours_initial),2)),
wage_parent2 = ifelse(parent2_workhours_initial == 0, 13, round(parent2_earnings_initial/(52*parent2_workhours_initial),2)),
) %>%
mutate(
parent2_max_work_override_amt = ifelse(parent2_workhours_initial < 40, 40, parent2_workhours_initial),
parent1_max_work = ifelse(parent1_workhours_initial < 40, 40, parent1_workhours_initial)
)
frs_df7
frs_df8 %>% head()
write.csv(frs_df8, "./data/cleaned_data/frs_inputs_4.csv", row.names = F)
frs_individuals %>% variable.names()
frs_individuals1 = frs_individuals %>%
select(-PWGTP1:PWGTP80)
frs_individuals1 = frs_individuals %>%
select(-c(PWGTP1:PWGTP80))
frs_individuals1 = frs_individuals %>%
select(-c(PWGTP1:PWGTP80))
frs_individuals1
frs_individuals1 %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC))
frs_individuals1 %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
)
frs_individuals1 %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
relocage(id, everthing())
frs_individuals1 %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
relocate(id, everthing())
frs_individuals1 %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everthing())
frs_individuals1 %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything())
frs_individuals1 %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-SERIALNO,-PUMA)
# remove extra variables
frs_individuals1 = frs_individuals %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-SERIALNO,-PUMA) %>%
select(-c(PWGTP1:PWGTP80))
frs_individuals1 %>% head()
# remove extra variables
frs_individuals1 = frs_individuals %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-PUMA) %>%
select(-c(PWGTP1:PWGTP80))
frs_individuals1 %>% head()
frs_individuals1 %>%
select(PAOC) %>%
head()
frs_individuals1 %>%
select(PAOC) %>%
head(100)
frs_individuals1 %>%
select(AGEP, SEX, PAOC) %>%
head(100)
frs_individuals1 %>%
select(AGEP, SEX, FPARC,PAOC) %>%
head(100)
frs_individuals = read.csv("./data/cleaned_data/acs_individuals.csv")
frs_df = read.csv("./data/cleaned_data/frs_inputs_3.csv")
nj_19h = haven::read_sas("./data/unix_hnj/psam_h34.sas7bdat")
# let the outcome Y be household income
# let the covariates takeN from FRS to be
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(SERIALNO, ST, AGEP, COW, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, )
acs_model %>% is.na()
acs_model %>% filter(AGEP > 17) %>% is.na()
nj_19h %>%
select(SERIALNO, HUPAC, NPF)
nj_19h_famstat = nj_19h %>%
select(SERIALNO, HUPAC, NPF)
frs_individuals1 %>%
left_join(nj_19h_famstat, by = "SERIALNO")
frs_individuals1 %>%
left_join(nj_19h_famstat, by = "SERIALNO") %>%
select(SERIALNO, HUPAC, NPF)
# let the outcome Y be household income
# let the covariates takeN from FRS to be
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(SERIALNO, ST, AGEP, COW, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, CIT)
acs_model %>% filter(AGEP > 17) %>% is.na()
acs_model %>% head()
# let the outcome Y be household income
# let the covariates takeN from FRS to be
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(SERIALNO, ST, AGEP, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, CIT)
acs_model %>% head()
sipp_immi %>%
mutate(
id = paste0(SSUID,"_",PNUM)
) %>%
relocate(id,everything()) %>%
select(-c(SSUID,PNUM,MONTHCODE)) %>%
filter(EBORNUS != 1 & ECITIZEN != 1)
# transform ACS individual data; remove extra variables
frs_individuals1 = frs_individuals %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-PUMA) %>%
select(-c(PWGTP1:PWGTP80))
# Select covariates and outcome (individual income) for imputation
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(id, SERIALNO, AGEP, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, CIT)
# transform ACS individual data; remove extra variables
frs_individuals1 = frs_individuals %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-PUMA) %>%
select(-c(PWGTP1:PWGTP80))
# Select covariates and outcome (individual income) for imputation
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(id, SERIALNO, AGEP, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, CIT)
acs_model %>% head()
# transform ACS individual data; remove extra variables
frs_individuals1 = frs_individuals %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-PUMA) %>%
select(-c(PWGTP1:PWGTP80))
# Select covariates and outcome (individual income) for imputation
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(id, SERIALNO, AGEP, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, CIT)
# Limit the SIPP data to only New Jersey entries; extract monthly data from October
sipp_immi = pu %>%
filter(TEHC_ST == 34) %>%
filter(MONTHCODE == 10)
# transform ACS individual data; remove extra variables
frs_individuals1 = frs_individuals %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-PUMA) %>%
select(-c(PWGTP1:PWGTP80))
# Select covariates and outcome (individual income) for imputation
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(id, SERIALNO, AGEP, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, CIT)
# Limit the SIPP data to only New Jersey entries; extract monthly data from October
sipp_model = pu %>%
filter(TEHC_ST == 34) %>%
filter(MONTHCODE == 10)
dim(sipp_model)
dim(acs_model)
sipp_model %>% head()
# transform ACS individual data; remove extra variables
frs_individuals1 = frs_individuals %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-PUMA) %>%
select(-c(PWGTP1:PWGTP80))
# Select covariates and outcome (individual income) for imputation
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(id, SERIALNO, AGEP, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, CIT)
# Limit the SIPP data to only New Jersey entries; extract monthly data from October
# create new identifier, remove unnecessary variables
sipp_model = pu %>%
filter(TEHC_ST == 34) %>%
filter(MONTHCODE == 10) %>%
mutate(
id = paste0(SSUID,"_", PNUM)
) %>%
# transform ACS individual data; remove extra variables
frs_individuals1 = frs_individuals %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-PUMA) %>%
select(-c(PWGTP1:PWGTP80))
# Select covariates and outcome (individual income) for imputation
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(id, SERIALNO, AGEP, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, CIT)
# Limit the SIPP data to only New Jersey entries; extract monthly data from October
# create new identifier, remove unnecessary variables
sipp_model = pu %>%
filter(TEHC_ST == 34) %>%
filter(MONTHCODE == 10) %>%
mutate(
id = paste0(SSUID,"_", PNUM)
) %>%
select(-MONTHCODE, -TEHC_ST)
sipp_model %>% head()
# transform ACS individual data; remove extra variables
frs_individuals1 = frs_individuals %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-PUMA) %>%
select(-c(PWGTP1:PWGTP80))
# Select covariates and outcome (individual income) for imputation
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(id, SERIALNO, AGEP, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, CIT)
# Limit the SIPP data to only New Jersey entries; extract monthly data from October
# create new identifier, remove unnecessary variables
sipp_model = pu %>%
filter(TEHC_ST == 34) %>%
filter(MONTHCODE == 10) %>%
mutate(
id = paste0(SSUID,"_", PNUM)
) %>%
select(-MONTHCODE, -TEHC_ST, -PNUM) %>%
relocate(id, everything())
sipp_model %>% head()
acs_model %>% head()
variable.names(sipp_model)
variable.names(sipp_model)
variable.names(acs_model)s
variable.names(sipp_model)
variable.names(acs_model)
# transform ACS individual data; remove extra variables
frs_individuals1 = frs_individuals %>%
select(-c(RT,DIVISION,SPORDER,REGION,ADJINC)) %>%
mutate(
id = paste0(SERIALNO,"_",PUMA)
) %>%
select(id, everything()) %>%
select(-PUMA) %>%
select(-c(PWGTP1:PWGTP80))
# Select covariates and outcome (individual income) for imputation
# 1. person reference/state 2. age 3. class of work (unnecessary) 4. education level 5. marital status 6. relationship 7. race. 8. gender. 9. work hours 10. personal income 11. Nativity 12.
acs_model = frs_individuals1 %>%
select(id, SERIALNO, AGEP, SCHL, MSP, RELSHIPP, RAC1P, SEX, WKHP, PINCP, NATIVITY, CIT)
# Limit the SIPP data to only New Jersey entries; extract monthly data from October
# create new identifier, remove unnecessary variables
sipp_model = pu %>%
filter(TEHC_ST == 34) %>%
filter(MONTHCODE == 10) %>%
mutate(
id = paste0(SSUID,"_", PNUM)
) %>%
select(-MONTHCODE, -TEHC_ST, -PNUM, -ENATCIT) %>%
relocate(id, everything())
variable.names(sipp_model)
variable.names(acs_model)
# rename the variables in SIPP data so that it aligns with acs_model
sipp_model %>%
rename(
)
gc()
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,tidycensus,readxl,patchwork)
library(reshape2)
library(mice)
require("data.table")
require("bit64")
census_api_key("e0ff7586a0faf3bf1819178c1392ba6fa3df7ad9")
